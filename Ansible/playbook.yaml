-
  name: Install Kubeadm and the Container Runtime Interface (CRI) on all hosts
  hosts: all
  tasks:

    - name: Update all packages to their latest version, remove unused dependencies and clean package download cache
      ansible.builtin.apt:
        name: "*"
        state: latest
        autoremove: true
        clean: true
      become: true
    
    # Prepare system configs

    # - name: Configure module br_netfilter to load at boot
    #   command: sudo sh -c 'echo "br_netfilter" > /etc/modules-load.d/br_netfilter.conf'
    #   become: true

    # - name: Configure module overlay to load at boot (prerequisite for containerd)
    #   command: sudo sh -c 'echo "overlay" > /etc/modules-load.d/containerd.conf'
    #   become: true

    # - name: Add br_netfilter and overlay modules to the Linux Kernel
    #   command: sudo modprobe -a br_netfilter overlay
    #   become: true

    # - name: Ensure net.bridge.bridge-nf-call-iptables is set to 1 in sysctl config
    #   command: sudo sh -c 'printf "net.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1" > /etc/sysctl.d/k8s.conf'
    #   become: true

    # - name: Apply sysctl params without reboot 
    #   command: sudo sysctl --system
    #   become: true   

    # - name: >
    #         Install Container Runtime Interface (CRI) containerd
    #         and packages needed to use the Kubernetes apt repository
    #   apt:
    #     pkg:
    #     - containerd 
    #     - apt-transport-https
    #     - ca-certificates
    #     - curl
    #     update_cache: true
    #     state: present
    #   become: true

    # - name: Create directory for containerd config file
    #   file:
    #     path: /etc/containerd
    #     state: directory
    #   become: true
    
    # - name: Generate default config file for containerd
    #   shell: containerd config default | sudo tee /etc/containerd/config.toml
    #   become: true

    # - name: Modify the containerd config file to use the systemd cgroup driver with runc
    #   replace:
    #     path: /etc/containerd/config.toml
    #     regexp: '^\s*SystemdCgroup\s=\sfalse$'
    #     replace: 'SystemdCgroup = true'
    #   become: true

    # - name: Restart containerd
    #   command: sudo systemctl restart containerd
    #   become: true

    # - name: Download the Google Cloud public signing key
    #   command: sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
    #   become: true

    # - name: Add the Kubernetes apt repository
    #   shell: echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
    #   become: true

    # - name: Update apt package index, install kubelet, kubeadm and kubectl
    #   apt:
    #     pkg:
    #     - kubelet 
    #     - kubeadm
    #     - kubectl
    #     update_cache: true
    #     state: present
    #   become: true

    # - name: Prevent kubeadm from being upgraded (set package to hold)
    #   dpkg_selections:
    #     name: kubeadm
    #     selection: hold
    #   become: true

    # - name: Prevent kubelet from being upgraded
    #   dpkg_selections:
    #     name: kubelet
    #     selection: hold
    #   become: true

    # - name: Prevent kubectl from being upgraded
    #   dpkg_selections:
    #     name: kubectl
    #     selection: hold
    #   become: true

-
  name: Initiate master node(s)
  hosts: masters
  tasks:
    # - name: testjmg
    #   ansible.builtin.apt:
    #     name: "*"
    #     state: latest
    #     autoremove: true
    #     clean: true
    #   become: true
